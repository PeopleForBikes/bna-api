name: staging-deployment

on:
  push:
    branches:
      - main

permissions:
  # This is required for requesting the JWT.
  id-token: write
  # This is required for actions/checkout.
  contents: read

concurrency: ${{ github.ref }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
      - name: Install cargo lambda
        run: pip install cargo-lambda

      # Configure AWS and deploy the lambdas.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.LAMBDA_DEPLOY_GITHUB_ROLE_ARN_STAGING }}
          aws-region: ${{ secrets.AWS_REGION_STAGING }}

      # Build the lambdas in release mode and deploy them.
      - name: Build all lambdas
        run: cd lambdas && cargo lambda build --release
      - name: Deploy lambdas
        run: >
          cargo lambda deploy
          --iam-role ${{ secrets.BNAAPI_ROLE_ARN_STAGING }}
          --env-var DATABASE_URL_SECRET_ID=${{ secrets.DATABASE_URL_SECRET_ID_STAGING }}
          axumed
